<!-- 
=========================================================
Light Bootstrap Dashboard PRO - v2.0.1
=========================================================

Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro
Copyright 2019 Creative Tim (https://www.creative-tim.com)

Coded by Creative Tim

=========================================================

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. -->

<!--
Central Automation v1.x
Updated: 1.34
Â© Aaron Scott (WiFi Downunder) 2021-2023
-->

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="apple-touch-icon" sizes="76x76" href="assets/img/apple-icon.png" />
		<link rel="icon" type="image/png" href="assets/img/favicon-16x16.png" sizes="16x16" />
		<link rel="icon" type="image/png" href="assets/img/favicon-32x32.png" sizes="32x32" />

		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
		<title>Central Automation Studio</title>
		<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no" name="viewport" />
		<!-- Fonts and icons -->
		<link href="https://fonts.googleapis.com/css?family=Montserrat:400,700,200" rel="stylesheet" />
		<script src="https://kit.fontawesome.com/470cd80fb0.js" crossorigin="anonymous"></script>
		<!-- CSS Files -->
		<link href="assets/css/bootstrap.min.css" rel="stylesheet" />
		<link href="assets/css/light-bootstrap-dashboard.css?v=2.0.1" rel="stylesheet" />
		<link href="assets/css/cas.css?v=240308" rel="stylesheet" />
		<link href="assets/css/chartist-plugin-tooltip.css" rel="stylesheet" />
		<meta http-equiv="Refresh" content="3600"> 
	</head>

	<body>
		<div class="wrapper">
			<div class="main-panel">
				<!-- Navbar -->
				<nav class="navbar navbar-expand-lg ">
					<div class="container-fluid">
						<div class="navbar-wrapper">
							<div class="icon-big text-center icon-warning">
								<i class="central-icon ca-api text-warning"></i>
							</div>
							<a class="navbar-brand" onclick="goToDashboard(event)" id="titleText" data-toggle="tooltip" data-placement="bottom" title=""> Central Automation Studio: Usage Statistics </a>
						</div>
						<div class="collapse navbar-collapse justify-content-end">
							<ul class="navbar-nav">
								<li class="nav-item active ">
									<a class="nav-link" href="dashboard.html">
										<i class="central-icon ca-dashboard"></i>
									</a>
								</li>
								<li class="nav-item dropdown">
									<a class="nav-link dropdown-toggle" href="http://example.com" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
										<i class="nc-icon nc-bullet-list-67"></i>
									</a>
									<div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
										<a href="documentation.html" class="dropdown-item"> <i class="central-icon ca-book-open"></i> Help </a>
										<a href="settings.html" class="dropdown-item"> <i class="nc-icon nc-settings-gear-64"></i> Settings </a>
									</div>
								</li>
							</ul>
						</div>
					</div>
				</nav>
				<!-- End Navbar -->
				<div class="content">
					<div class="container-fluid">
						<!-- Last Run Card -->
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-body ">
										<p class="card-category" id="dataDate"></p>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Proxy Status</h4>
									</div>
									<div class="card-body ">
										<div class="proxy-status">
											<nav>
												<ul class="footer-menu" id="api-footer"></ul>
											</nav>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Unique Users</h4>
										<p class="card-category">Since May 2022</p>
									</div>
									<div class="card-body ">
										<div class="row">
											<div class="col-md-3 rightVert">
												<div class="table-responsive">
													<table class="simple-table table" id="yearly-table">
														<thead>
														<th>Year</th>
														<th>Unique Users</th>
														</thead>
														<tbody></tbody>
													</table>
												</div>
											</div>
											<div class="col-md-9 ml-auto mr-auto">
												<div class="row">
													<div class="col-md-3">
														<select id="userselector" class="selectpicker" data-title="Select a mode..." data-style="btn-default btn-outline" data-menu-style="dropdown-orange" onchange="updateUserGraph()" width="300" style="width: 300px">
															<option value="month" selected>Per Month</option>
															<option value="week">Per Week</option>
															<option value="growth">Growth Over Time</option>
															<option value="growth-week">Growth Over Time / Week</option>
														</select>
													</div>
													<div class="col-md-3">
														<select id="yearselector" class="selectpicker" data-title="Select a mode..." data-style="btn-default btn-outline" data-menu-style="dropdown-orange" onchange="updateUserGraph()" width="300" style="width: 300px">
															<option value="2024" selected>2024</option>
															<option value="2023">2023</option>
															<option value="2022">2022</option>
														</select>
													</div>
												</div>
												<div class="row">
													<div class="col-md-12">
														<div id="uniqueusers-chart" class="ct-chart"></div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Most Used Pages</h4>
										<p class="card-category">Since June 2021</p>
									</div>
									<div class="card-body ">
										<div class="row">
											<div class="col-md-3 rightVert">
												<div class="table-responsive">
													<table class="simple-table table" id="history-table">
														<thead>
														<th>Page</th>
														<th>Hits</th>
														</thead>
														<tbody></tbody>
													</table>
												</div>
											</div>
											<div class="col-md-9 ml-auto mr-auto">
												<div class="row">
													<div class="col-md-12">
														<div id="history-chart" class="ct-chart"></div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Countries Using CAS</h4>
										<p class="card-category" id="countryCounter">Unique Users Since January 2023</p>
									</div>
									<div class="card-body ">
										<div class="row">
											<div class="col-md-3 rightVert">
												<div class="table-responsive">
													<table class="country-table table" id="countryTable">
														<thead>
														<th>Country</th>
														<th></th>
														<th>Users</th>
														</thead>
														<tbody></tbody>
													</table>
												</div>
											</div>
											<div class="col-md-9 ml-auto mr-auto">
												<div id="worldMap" style="height: 450px;"></div>
											</div>
										</div>
										<!--<div id="country-chart" class="ct-chart"></div>-->
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Visitor Stats</h4>
										<p class="card-category">This Year</p>
									</div>
									<div class="card-body ">
										<div class="row">
											<div class="col-md-3">
												<select id="visitorselector" class="selectpicker" data-title="Select a mode..." data-style="btn-default btn-outline" data-menu-style="dropdown-orange" onchange="updateVisitorGraph()" width="300" style="width: 300px">
													<option value="7days">Last 7 Days</option>
													<option value="28days" selected>Last 28 Days</option>
													<option value="week">Per Week</option>
													<option value="month">Per Month</option>
												</select>
											</div>
										</div>
										<div id="uniquevisitors-chart" class="ct-chart"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Daily Page Views</h4>
										<p class="card-category">Last 28 Days</p>
									</div>
									<div class="card-body ">
										<div id="daily-chart" class="ct-chart"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-12">
								<div class="card ">
									<div class="card-header ">
										<h4 class="card-title">Views Per Page</h4>
										<p class="card-category">Monthly Graph</p>
										<div class="card-body ">
											<div class="row">
												<div class="col-md-3">
													<select id="pageselector" class="selectpicker" data-title="Select a page..." data-style="btn-default btn-outline" data-menu-style="dropdown-orange" onchange="updatePageViewGraph()" width="300" style="width: 300px">
														<option style="color: #999999;" value="dashboards" selected>Dashboards</option>
														<option value="hydra-dashboard.html">Hydra Dashboard</option>
														<option value="dashboard.html">Dashboard</option>
														<option value="event-dashboard.html">Event Dashboard</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="support">Support</option>
														<option value="settings.html">Settings</option>
														<option value="documentation.html">Documentation</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="workflow">Workflows</option>
														<option value="workflow-csv.html">CSV Workflows</option>
														<option value="workflow-site.html">Site Workflows</option>
														<option value="workflow-msp.html">MSP Workflows</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="deployment">Deployment</option>
														<option value="deployment-group.html">Group</option>
														<option value="deployment-wlan.html">WLAN</option>
														<option value="deployment-user-roles.html">User Roles</option>
														<option value="deployment-mpsk.html">MPSK-Local</option>
														<option value="deployment-auth-servers.html">Authentication Servers</option>
														<option value="deployment-switching.html">Switches</option>
														<option value="deployment-gateway.html">Gateways</option>
														<option value="deployment-country.html">Country Codes</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="services">Services</option>
														<option value="deployment-airmatch.html">AirMatch</option>
														<option value="deployment-clientmatch.html">ClientMatch</option>
														<option value="monitoring-kms.html">Key Management Service</option>
														<option value="deployment-cda-mpsk.html">Cloud Auth MPSK</option>
														<option value="deployment-inventory.html">Device Inventory</option>
														<option value="monitoring-licensing.html">License Monitoring</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="monitoring">Monitoring</option>
														<option value="monitoring-clients.html">Client Statistics</option>
														<option value="monitoring-aps.html">AP Statistics</option>
														<option value="monitoring-reboot.html">AP Reboot</option>
														<option value="monitoring-ipam.html">IPAM Monitoring</option>
														<option value="monitoring-rapids.html">RAPIDS</option>
														<option value="monitoring-mesh.html">Mesh</option>
														<option value="monitoring-vrf.html">VisualRF</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="experimental">Experimental</option>
														<option value="experimental-switching.html">Switching</option>
														<option value="troubleshooting-clients.html">Client Troubleshooting</option>
														<option value="troubleshooting-ap.html">AP Troubleshooting</option>
														<option value="troubleshooting-switching.html">Switch Troubleshooting</option>
														<option value="deployment-bulk-ap.html">Bulk AP Configuration</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="management">Management</option>
														<option value="deployment-group-mgmt.html">Group Management</option>
														<option value="deployment-site-mgmt.html">Site Management</option>
														<option value="deployment-visitor.html">Visitor Management</option>
														<option style="color: #cccccc;" disabled>ââââââââââââââââââââââââ</option>
														<option style="color: #999999;" value="private">Private</option>
														<option value="monitoring-resources.html">Resource Reboot</option>
														<option value="deployment-pan.html">MPSK-Local PAN</option>
														<option value="comcast.html">Comcast</option>
													</select>
												</div>
												<div class="col-md-3">
													<select id="monthselector" class="selectpicker" data-title="Select a month..." data-style="btn-default btn-outline" data-menu-style="dropdown-orange" onchange="updatePageViewGraph()" width="300" style="width: 300px">
														<option value="week" selected>Last 7 Days</option>
														<option value="28days">Last 28 Days</option>
														<option value="current">Current Month</option>
														<option value="previous">Previous Month</option>
													</select>
												</div>
											</div>
											<div id="pagehits-chart" class="ct-chart"></div>
										</div>
										<div class="card-footer ">
											<div class="legend" id="viewsLegend"></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<footer class="footer">
					<div class="container">
						<nav>
							<p class="copyright text-center">
								Â©
								<script>
									document.write(new Date().getFullYear())
								</script>
								<a href="http://www.wifidownunder.com">WiFi Downunder</a>
							</p>
						</nav>
					</div>
				</footer>
			</div>
		</div>
	</body>
	<!--   Core JS Files   -->
	<script src="assets/js/core/jquery.3.2.1.min.js" type="text/javascript"></script>
	<script src="assets/js/core/popper.min.js" type="text/javascript"></script>
	<script src="assets/js/core/bootstrap.min.js" type="text/javascript"></script>
	<!--  Plugin for Switches, full documentation here: http://www.jque.re/plugins/version3/bootstrap.switch/ -->
	<script src="assets/js/plugins/bootstrap-switch.js"></script>
	<!--  Chartist Plugin  -->
	<script src="assets/js/plugins/chartist.js"></script>
	<script src="assets/js/plugins/chartist-plugin-tooltip.js"></script>
	<!--  Notifications Plugin    -->
	<script src="assets/js/plugins/bootstrap-notify.js"></script>
	<!--  jVector Map  -->
	<script src="assets/js/plugins/jquery-jvectormap.js" type="text/javascript"></script>
	<!--  Plugin for Date Time Picker and Full Calendar Plugin-->
	<script src="assets/js/plugins/moment.min.js"></script>
	<!--  DatetimePicker   -->
	<script src="assets/js/plugins/bootstrap-datetimepicker.js"></script>
	<!--  Sweet Alert  -->
	<script src="assets/js/plugins/sweetalert2.all.min.js" type="text/javascript"></script>
	<!--  Tags Input  -->
	<script src="assets/js/plugins/bootstrap-tagsinput.js" type="text/javascript"></script>
	<!--  Sliders  -->
	<script src="assets/js/plugins/nouislider.js" type="text/javascript"></script>
	<!--  Bootstrap Select  -->
	<script src="assets/js/plugins/bootstrap-selectpicker.js" type="text/javascript"></script>
	<!--  jQueryValidate  -->
	<script src="assets/js/plugins/jquery.validate.min.js" type="text/javascript"></script>
	<!--  Plugin for the Wizard, full documentation here: https://github.com/VinceG/twitter-bootstrap-wizard -->
	<script src="assets/js/plugins/jquery.bootstrap-wizard.js"></script>
	<!--  Bootstrap Table Plugin -->
	<script src="assets/js/plugins/bootstrap-table.js"></script>
	<!--  DataTable Plugin -->
	<script src="assets/js/plugins/jquery.dataTables.min.js"></script>
	<script src="assets/js/plugins/datetime-moment.js"></script>
	<!--  Full Calendar   -->
	<script src="assets/js/plugins/fullcalendar.min.js"></script>
	<!-- Control Center for Now Ui Dashboard: parallax effects, scripts for the example pages etc -->
	<script src="assets/js/light-bootstrap-dashboard.js?v=2.0.1" type="text/javascript"></script>
	<!-- Light Dashboard DEMO methods, don't include it in your project! -->
	<script src="assets/js/demo.js"></script>
	<script src="assets/js/plugins/papaparse.min.js"></script>
	<!-- Sorting by IP Address plugin for DataTables -->
	<script src="assets/js/plugins/ip-address.js"></script>
	<script src="assets/js/plugins/title-numeric.js"></script>
	<?php
	require_once('../phpcount.php');
	
	/* User Statistics */
	// Get Unique User counts for this year
	$totU = PHPCount::GetUsersForYear(date("Y"));
	$totalUniqueUsers = PHPCount::GetUsersForAllYears();
	
	// Get Unique User counts for this year
	$ntotU = array();
	for ($x = 1; $x <= 12; $x++) {
	  $ntotU[] = PHPCount::GetUsersForMonth($x, date("Y"));
	}
	
	// User stats per week
	$ntotUW = array();
	for ($x = 0; $x <= 53; $x++) {
	  $ntotUW[] = PHPCount::GetUsersForWeek($x, date("Y"));
	}
	
	// Create the totals for the "over time" graph
	$janTotal = $ntotU[0];
	$febTotal = $ntotU[0]+$ntotU[1];
	$marTotal = $ntotU[0]+$ntotU[1]+$ntotU[2];
	$aprTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3];
	$mayTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4];
	$junTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5];
	$julTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5]+$ntotU[6];
	$augTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5]+$ntotU[6]+$ntotU[7];
	$sepTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5]+$ntotU[6]+$ntotU[7]+$ntotU[8];
	$octTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5]+$ntotU[6]+$ntotU[7]+$ntotU[8]+$ntotU[9];
	$novTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5]+$ntotU[6]+$ntotU[7]+$ntotU[8]+$ntotU[9]+$ntotU[10];
	$decTotal = $ntotU[0]+$ntotU[1]+$ntotU[2]+$ntotU[3]+$ntotU[4]+$ntotU[5]+$ntotU[6]+$ntotU[7]+$ntotU[8]+$ntotU[9]+$ntotU[10]+$ntotU[11];
	
	
	// User data for 2023
	$totalUsers2023 = array();
	for ($x = 1; $x <= 12; $x++) {
	  $totalUsers2023[] = PHPCount::GetUsersForMonth($x, 2023);
	}
	
	// User stats per week in 2023
	$totalUsers2023W = array();
	for ($x = 0; $x <= 53; $x++) {
	  $totalUsers2023W[] = PHPCount::GetUsersForWeek($x, 2023);
	}
	
	// Create the totals for the "over time" graph
	$janTotal2023 = $totalUsers2023[0];
	$febTotal2023 = $totalUsers2023[0]+$totalUsers2023[1];
	$marTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2];
	$aprTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3];
	$mayTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4];
	$junTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5];
	$julTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5]+$totalUsers2023[6];
	$augTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5]+$totalUsers2023[6]+$totalUsers2023[7];
	$sepTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5]+$totalUsers2023[6]+$totalUsers2023[7]+$totalUsers2023[8];
	$octTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5]+$totalUsers2023[6]+$totalUsers2023[7]+$totalUsers2023[8]+$totalUsers2023[9];
	$novTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5]+$totalUsers2023[6]+$totalUsers2023[7]+$totalUsers2023[8]+$totalUsers2023[9]+$totalUsers2023[10];
	$decTotal2023 = $totalUsers2023[0]+$totalUsers2023[1]+$totalUsers2023[2]+$totalUsers2023[3]+$totalUsers2023[4]+$totalUsers2023[5]+$totalUsers2023[6]+$totalUsers2023[7]+$totalUsers2023[8]+$totalUsers2023[9]+$totalUsers2023[10]+$totalUsers2023[11];	
	
	
	// User data for 2022
	$totalUsers2022 = array();
	for ($x = 1; $x <= 12; $x++) {
	  $totalUsers2022[] = PHPCount::GetUsersForMonth($x, 2022);
	}
	
	// User stats per week in 2022
	$totalUsers2022W = array();
	for ($x = 0; $x <= 53; $x++) {
	  $totalUsers2022W[] = PHPCount::GetUsersForWeek($x, 2022);
	}
	
	// Create the totals for the "over time" graph
	$janTotal2022 = $totalUsers2022[0];
	$febTotal2022 = $totalUsers2022[0]+$totalUsers2022[1];
	$marTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2];
	$aprTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3];
	$mayTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4];
	$junTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5];
	$julTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5]+$totalUsers2022[6];
	$augTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5]+$totalUsers2022[6]+$totalUsers2022[7];
	$sepTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5]+$totalUsers2022[6]+$totalUsers2022[7]+$totalUsers2022[8];
	$octTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5]+$totalUsers2022[6]+$totalUsers2022[7]+$totalUsers2022[8]+$totalUsers2022[9];
	$novTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5]+$totalUsers2022[6]+$totalUsers2022[7]+$totalUsers2022[8]+$totalUsers2022[9]+$totalUsers2022[10];
	$decTotal2022 = $totalUsers2022[0]+$totalUsers2022[1]+$totalUsers2022[2]+$totalUsers2022[3]+$totalUsers2022[4]+$totalUsers2022[5]+$totalUsers2022[6]+$totalUsers2022[7]+$totalUsers2022[8]+$totalUsers2022[9]+$totalUsers2022[10]+$totalUsers2022[11];	
	
	
	/* Visitor Statistics */
	// Get Visitor counts for this year
	$ntotV = array();
	for ($x = 1; $x <= 12; $x++) {
	  $ntotV[] = PHPCount::GetVisitorsForMonth($x, date("Y"));
	}
	
	// Visitor stats per week
	$ntotVW = array();
	for ($x = 0; $x <= 53; $x++) {
	  $ntotVW[] = PHPCount::GetVisitorsForWeek($x, date("Y"));
	}
	
	$visitorDataW = PHPCount::GetVisitorsFor7Days();
	$visitorData28 = PHPCount::GetVisitorsFor28Days();



	/* Page Hit Statistics */	
	// Get this months page hits
	$currentMonth = date("n");
	$currentYear = date("Y");
	$hydraData = PHPCount::GetDataForMonth('hydra-dashboard.html', $currentMonth, $currentYear,false);
	$dashboardData = PHPCount::GetDataForMonth('dashboard.html', $currentMonth, $currentYear,false);
	$settingsData = PHPCount::GetDataForMonth('settings.html', $currentMonth, $currentYear,false);
	$documentationData = PHPCount::GetDataForMonth('documentation.html', $currentMonth, $currentYear,false);
	$csvData = PHPCount::GetDataForMonth('workflow-csv.html', $currentMonth, $currentYear,false);
	$siteData = PHPCount::GetDataForMonth('workflow-site.html', $currentMonth, $currentYear,false);
	$mspData = PHPCount::GetDataForMonth('workflow-msp.html', $currentMonth, $currentYear,false);
	$groupData = PHPCount::GetDataForMonth('deployment-group.html', $currentMonth, $currentYear,false);
	$wlanData = PHPCount::GetDataForMonth('deployment-wlan.html', $currentMonth, $currentYear,false);
	$rolesData = PHPCount::GetDataForMonth('deployment-user-roles.html', $currentMonth, $currentYear,false);
	$mpskData = PHPCount::GetDataForMonth('deployment-mpsk.html', $currentMonth, $currentYear,false);
	$cdampskData = PHPCount::GetDataForMonth('deployment-cda-mpsk.html', $currentMonth, $currentYear,false);
	$authData = PHPCount::GetDataForMonth('deployment-auth-servers.html', $currentMonth, $currentYear,false);
	$switchData = PHPCount::GetDataForMonth('deployment-switching.html', $currentMonth, $currentYear,false);
	$gatewayData = PHPCount::GetDataForMonth('deployment-gateway.html', $currentMonth, $currentYear,false);
	$countryData = PHPCount::GetDataForMonth('deployment-country.html', $currentMonth, $currentYear,false);
	$airmatchData = PHPCount::GetDataForMonth('deployment-airmatch.html', $currentMonth, $currentYear,false);
	$clientmatchData = PHPCount::GetDataForMonth('deployment-clientmatch.html', $currentMonth, $currentYear,false);
	$kmsData = PHPCount::GetDataForMonth('monitoring-kms.html', $currentMonth, $currentYear,false);
	$inventoryData = PHPCount::GetDataForMonth('deployment-inventory.html', $currentMonth, $currentYear,false);
	$licenseData = PHPCount::GetDataForMonth('monitoring-licensing.html', $currentMonth, $currentYear,false);
	$clientsData = PHPCount::GetDataForMonth('monitoring-clients.html', $currentMonth, $currentYear,false);
	$apData = PHPCount::GetDataForMonth('monitoring-aps.html', $currentMonth, $currentYear,false);
	$rebootData = PHPCount::GetDataForMonth('monitoring-reboot.html', $currentMonth, $currentYear,false);
	$ipamData = PHPCount::GetDataForMonth('monitoring-ipam.html', $currentMonth, $currentYear,false);
	$rapidsData = PHPCount::GetDataForMonth('monitoring-rapids.html', $currentMonth, $currentYear,false);
	$meshData = PHPCount::GetDataForMonth('monitoring-mesh.html', $currentMonth, $currentYear,false);
	$vrfData = PHPCount::GetDataForMonth('monitoring-vrf.html', $currentMonth, $currentYear,false);
	$exSwitchData = PHPCount::GetDataForMonth('experimental-switching.html', $currentMonth, $currentYear,false);
	$troubleshootingClientsData = PHPCount::GetDataForMonth('troubleshooting-clients.html', $currentMonth, $currentYear,false);
	$troubleshootingAPData = PHPCount::GetDataForMonth('troubleshooting-ap.html', $currentMonth, $currentYear,false);
	$troubleshootingSwitchingData = PHPCount::GetDataForMonth('troubleshooting-switching.html', $currentMonth, $currentYear,false);
	$bulkAPData = PHPCount::GetDataForMonth('deployment-bulk-ap.html', $currentMonth, $currentYear,false);
	$panData = PHPCount::GetDataForMonth('deployment-pan.html', $currentMonth, $currentYear,false);
	$resourceData = PHPCount::GetDataForMonth('monitoring-resources.html', $currentMonth, $currentYear,false);
	$groupMgmtData = PHPCount::GetDataForMonth('deployment-group-mgmt.html', $currentMonth, $currentYear,false);
	$siteMgmtData = PHPCount::GetDataForMonth('deployment-site-mgmt.html', $currentMonth, $currentYear,false);
	$visitorMgmtData = PHPCount::GetDataForMonth('deployment-visitor.html', $currentMonth, $currentYear,false);
	$eventDashData = PHPCount::GetDataForMonth('event-dashboard.html', $currentMonth, $currentYear,false);
	$comcastData = PHPCount::GetDataForMonth('comcast.html', $currentMonth, $currentYear,false);
	
	// Get the previous months page hits
	if ($currentMonth == 1) {
		$currentMonth = 12;
		$currentYear = $currentYear-1;
	} else {
		$currentMonth = $currentMonth-1;
	}
	$hydraDataP = PHPCount::GetDataForMonth('hydra-dashboard.html', $currentMonth, $currentYear,false);
	$dashboardDataP = PHPCount::GetDataForMonth('dashboard.html', $currentMonth, $currentYear,false);
	$settingsDataP = PHPCount::GetDataForMonth('settings.html', $currentMonth, $currentYear,false);
	$documentationDataP = PHPCount::GetDataForMonth('documentation.html', $currentMonth, $currentYear,false);
	$csvDataP = PHPCount::GetDataForMonth('workflow-csv.html', $currentMonth, $currentYear,false);
	$siteDataP = PHPCount::GetDataForMonth('workflow-site.html', $currentMonth, $currentYear,false);
	$mspDataP = PHPCount::GetDataForMonth('workflow-msp.html', $currentMonth, $currentYear,false);
	$groupDataP = PHPCount::GetDataForMonth('deployment-group.html', $currentMonth, $currentYear,false);
	$wlanDataP = PHPCount::GetDataForMonth('deployment-wlan.html', $currentMonth, $currentYear,false);
	$rolesDataP = PHPCount::GetDataForMonth('deployment-user-roles.html', $currentMonth, $currentYear,false);
	$mpskDataP = PHPCount::GetDataForMonth('deployment-mpsk.html', $currentMonth, $currentYear,false);
	$cdampskDataP = PHPCount::GetDataForMonth('deployment-cda-mpsk.html', $currentMonth, $currentYear,false);
	$authDataP = PHPCount::GetDataForMonth('deployment-auth-servers.html', $currentMonth, $currentYear,false);
	$switchDataP = PHPCount::GetDataForMonth('deployment-switching.html', $currentMonth, $currentYear,false);
	$gatewayDataP = PHPCount::GetDataForMonth('deployment-gateway.html', $currentMonth, $currentYear,false);
	$countryDataP = PHPCount::GetDataForMonth('deployment-country.html', $currentMonth, $currentYear,false);
	$airmatchDataP = PHPCount::GetDataForMonth('deployment-airmatch.html', $currentMonth, $currentYear,false);
	$clientmatchDataP = PHPCount::GetDataForMonth('deployment-clientmatch.html', $currentMonth, $currentYear,false);
	$kmsDataP = PHPCount::GetDataForMonth('monitoring-kms.html', $currentMonth, $currentYear,false);
	$inventoryDataP = PHPCount::GetDataForMonth('deployment-inventory.html', $currentMonth, $currentYear,false);
	$licenseDataP = PHPCount::GetDataForMonth('monitoring-licensing.html', $currentMonth, $currentYear,false);
	$clientsDataP = PHPCount::GetDataForMonth('monitoring-clients.html', $currentMonth, $currentYear,false);
	$apDataP = PHPCount::GetDataForMonth('monitoring-aps.html', $currentMonth, $currentYear,false);
	$rebootDataP = PHPCount::GetDataForMonth('monitoring-reboot.html', $currentMonth, $currentYear,false);
	$ipamDataP = PHPCount::GetDataForMonth('monitoring-ipam.html', $currentMonth, $currentYear,false);
	$rapidsDataP = PHPCount::GetDataForMonth('monitoring-rapids.html', $currentMonth, $currentYear,false);
	$meshDataP = PHPCount::GetDataForMonth('monitoring-mesh.html', $currentMonth, $currentYear,false);
	$vrfDataP = PHPCount::GetDataForMonth('monitoring-vrf.html', $currentMonth, $currentYear,false);
	$exSwitchDataP = PHPCount::GetDataForMonth('experimental-switching.html', $currentMonth, $currentYear,false);
	$troubleshootingClientsDataP = PHPCount::GetDataForMonth('troubleshooting-clients.html', $currentMonth, $currentYear,false);
	$troubleshootingAPDataP = PHPCount::GetDataForMonth('troubleshooting-ap.html', $currentMonth, $currentYear,false);
	$troubleshootingSwitchingDataP = PHPCount::GetDataForMonth('troubleshooting-swithcing.html', $currentMonth, $currentYear,false);
	$bulkAPDataP = PHPCount::GetDataForMonth('deployment-bulk-ap.html', $currentMonth, $currentYear,false);
	$panDataP = PHPCount::GetDataForMonth('deployment-pan.html', $currentMonth, $currentYear,false);
	$resourceDataP = PHPCount::GetDataForMonth('monitoring-resources.html', $currentMonth, $currentYear,false);
	$groupMgmtDataP = PHPCount::GetDataForMonth('deployment-group-mgmt.html', $currentMonth, $currentYear,false);
	$siteMgmtDataP = PHPCount::GetDataForMonth('deployment-site-mgmt.html', $currentMonth, $currentYear,false);
	$visitorMgmtDataP = PHPCount::GetDataForMonth('deployment-visitor.html', $currentMonth, $currentYear,false);
	$eventDashDataP = PHPCount::GetDataForMonth('event-dashboard.html', $currentMonth, $currentYear,false);
	$comcastDataP = PHPCount::GetDataForMonth('comcast.html', $currentMonth, $currentYear,false);
	
	// Get the last 7 days worth of page hits
	$hydraDataW = PHPCount::GetDataForLast7Days('hydra-dashboard.html', false);
	$dashboardDataW = PHPCount::GetDataForLast7Days('dashboard.html', false);
	$settingsDataW = PHPCount::GetDataForLast7Days('settings.html', false);
	$documentationDataW = PHPCount::GetDataForLast7Days('documentation.html', false);
	$csvDataW = PHPCount::GetDataForLast7Days('workflow-csv.html', false);
	$siteDataW = PHPCount::GetDataForLast7Days('workflow-site.html', false);
	$mspDataW = PHPCount::GetDataForLast7Days('workflow-msp.html', false);
	$groupDataW = PHPCount::GetDataForLast7Days('deployment-group.html', false);
	$wlanDataW = PHPCount::GetDataForLast7Days('deployment-wlan.html', false);
	$rolesDataW = PHPCount::GetDataForLast7Days('deployment-user-roles.html', false);
	$mpskDataW = PHPCount::GetDataForLast7Days('deployment-mpsk.html', false);
	$cdampskDataW = PHPCount::GetDataForLast7Days('deployment-cda-mpsk.html', false);
	$authDataW = PHPCount::GetDataForLast7Days('deployment-auth-servers.html', false);
	$switchDataW = PHPCount::GetDataForLast7Days('deployment-switching.html', false);
	$gatewayDataW = PHPCount::GetDataForLast7Days('deployment-gateway.html', false);
	$countryDataW = PHPCount::GetDataForLast7Days('deployment-country.html', false);
	$airmatchDataW = PHPCount::GetDataForLast7Days('deployment-airmatch.html', false);
	$clientmatchDataW = PHPCount::GetDataForLast7Days('deployment-clientmatch.html', false);
	$kmsDataW = PHPCount::GetDataForLast7Days('monitoring-kms.html', false);
	$inventoryDataW = PHPCount::GetDataForLast7Days('deployment-inventory.html', false);
	$licenseDataW = PHPCount::GetDataForLast7Days('monitoring-licensing.html', false);
	$clientsDataW = PHPCount::GetDataForLast7Days('monitoring-clients.html', false);
	$apDataW = PHPCount::GetDataForLast7Days('monitoring-aps.html', false);
	$rebootDataW = PHPCount::GetDataForLast7Days('monitoring-reboot.html', false);
	$ipamDataW = PHPCount::GetDataForLast7Days('monitoring-ipam.html', false);
	$rapidsDataW = PHPCount::GetDataForLast7Days('monitoring-rapids.html', false);
	$meshDataW = PHPCount::GetDataForLast7Days('monitoring-mesh.html', false);
	$vrfDataW = PHPCount::GetDataForLast7Days('monitoring-vrf.html', false);
	$exSwitchDataW = PHPCount::GetDataForLast7Days('experimental-switching.html', false);
	$troubleshootingClientsDataW = PHPCount::GetDataForLast7Days('troubleshooting-clients.html', false);
	$troubleshootingAPDataW = PHPCount::GetDataForLast7Days('troubleshooting-ap.html', false);
	$troubleshootingSwitchingDataW = PHPCount::GetDataForLast7Days('troubleshooting-switching.html', false);
	$bulkAPDataW = PHPCount::GetDataForLast7Days('deployment-bulk-ap.html', false);
	$panDataW = PHPCount::GetDataForLast7Days('deployment-pan.html', false);
	$resourceDataW = PHPCount::GetDataForLast7Days('monitoring-resources.html', false);
	$groupMgmtDataW = PHPCount::GetDataForLast7Days('deployment-group-mgmt.html', false);
	$siteMgmtDataW = PHPCount::GetDataForLast7Days('deployment-site-mgmt.html', false);
	$visitorMgmtDataW = PHPCount::GetDataForLast7Days('deployment-visitor.html', false);
	$eventDashDataW = PHPCount::GetDataForLast7Days('event-dashboard.html', false);
	$comcastDataW = PHPCount::GetDataForLast7Days('comcast.html', false);
	
	// Get the last 28 days worth of page hits
	$hydraData28 = PHPCount::GetDataForLast28days('hydra-dashboard.html', false);
	$dashboardData28 = PHPCount::GetDataForLast28days('dashboard.html', false);
	$settingsData28 = PHPCount::GetDataForLast28days('settings.html', false);
	$documentationData28 = PHPCount::GetDataForLast28days('documentation.html', false);
	$csvData28 = PHPCount::GetDataForLast28days('workflow-csv.html', false);
	$siteData28 = PHPCount::GetDataForLast28days('workflow-site.html', false);
	$mspData28 = PHPCount::GetDataForLast28days('workflow-msp.html', false);
	$groupData28 = PHPCount::GetDataForLast28days('deployment-group.html', false);
	$wlanData28 = PHPCount::GetDataForLast28days('deployment-wlan.html', false);
	$rolesData28 = PHPCount::GetDataForLast28days('deployment-user-roles.html', false);
	$mpskData28 = PHPCount::GetDataForLast28days('deployment-mpsk.html', false);
	$cdampskData28 = PHPCount::GetDataForLast28days('deployment-cda-mpsk.html', false);
	$authData28 = PHPCount::GetDataForLast28days('deployment-auth-servers.html', false);
	$switchData28 = PHPCount::GetDataForLast28days('deployment-switching.html', false);
	$gatewayData28 = PHPCount::GetDataForLast28days('deployment-gateway.html', false);
	$countryData28 = PHPCount::GetDataForLast28days('deployment-country.html', false);
	$airmatchData28 = PHPCount::GetDataForLast28days('deployment-airmatch.html', false);
	$clientmatchData28 = PHPCount::GetDataForLast28days('deployment-clientmatch.html', false);
	$kmsData28 = PHPCount::GetDataForLast28days('monitoring-kms.html', false);
	$inventoryData28 = PHPCount::GetDataForLast28days('deployment-inventory.html', false);
	$licenseData28 = PHPCount::GetDataForLast28days('monitoring-licensing.html', false);
	$clientsData28 = PHPCount::GetDataForLast28days('monitoring-clients.html', false);
	$apData28 = PHPCount::GetDataForLast28days('monitoring-aps.html', false);
	$rebootData28 = PHPCount::GetDataForLast28days('monitoring-reboot.html', false);
	$ipamData28 = PHPCount::GetDataForLast28days('monitoring-ipam.html', false);
	$rapidsData28 = PHPCount::GetDataForLast28days('monitoring-rapids.html', false);
	$meshData28 = PHPCount::GetDataForLast28days('monitoring-mesh.html', false);
	$vrfData28 = PHPCount::GetDataForLast28days('monitoring-vrf.html', false);
	$exSwitchData28 = PHPCount::GetDataForLast28days('experimental-switching.html', false);
	$troubleshootingClientsData28 = PHPCount::GetDataForLast28days('troubleshooting-clients.html', false);
	$troubleshootingAPData28 = PHPCount::GetDataForLast28days('troubleshooting-ap.html', false);
	$troubleshootingSwitchingData28 = PHPCount::GetDataForLast28days('troubleshooting-switching.html', false);
	$bulkAPData28 = PHPCount::GetDataForLast28days('deployment-bulk-ap.html', false);
	$panData28 = PHPCount::GetDataForLast28days('deployment-pan.html', false);
	$resourceData28 = PHPCount::GetDataForLast28days('monitoring-resources.html', false);
	$groupMgmtData28 = PHPCount::GetDataForLast28days('deployment-group-mgmt.html', false);
	$siteMgmtData28 = PHPCount::GetDataForLast28days('deployment-site-mgmt.html', false);
	$visitorMgmtData28 = PHPCount::GetDataForLast28days('deployment-visitor.html', false);
	$eventDashData28 = PHPCount::GetDataForLast28days('event-dashboard.html', false);
	$comcastData28 = PHPCount::GetDataForLast28days('comcast.html', false);
	
	$dailyData28 = PHPCount::GetHitsForLast28Days(false);
	
	$hitHistory = PHPCount::GetHitHistory(false);
	
	$countryHistory = PHPCount::GetCountryHistory();
	
	?>
	<script type="text/javascript">
		var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

		var cleanPageNames = {
			'dashboard.html': 'Dashboard',
			'hydra-dashboard.html': 'Hydra',
			'settings.html': 'Settings',
			'documentation.html': 'Documentation',
			'workflow-csv.html': 'CSV Workflows',
			'workflow-site.html': 'Site Workflows',
			'workflow-msp.html': 'MSP Workflows',
			'monitoring-clients.html': 'Client Stats',
			'monitoring-aps.html': 'AP Stats',
			'monitoring-ipam.html': 'IPAM',
			'monitoring-licensing.html': 'Licensing',
			'monitoring-reboot.html': 'Reboot',
			'monitoring-rapids.html': 'RAPIDS',
			'monitoring-mesh.html': 'Mesh',
			'monitoring-vrf.html': 'VisualRF',
			'monitoring-kms.html': 'Key Management Service',
			'monitoring-resources.html': 'Resource Reboot',
			'deployment-group.html': 'WLAN Group Config',
			'deployment-wlan.html': 'SSID Config',
			'deployment-user-roles.html': 'User Roles',
			'deployment-auth-servers.html': 'Auth Server Config',
			'deployment-gateway.html': 'Gateway Config',
			'deployment-airmatch.html': 'AirMatch',
			'deployment-inventory.html': 'Inventory',
			'deployment-clientmatch.html': 'ClientMatch',
			'deployment-switching.html': 'Switch Config',
			'deployment-group-mgmt.html': 'Group Mgmt',
			'deployment-site-mgmt.html': 'Site Mgmt',
			'deployment-visitor.html': 'Visitor Mgmt',
			'deployment-country.html': 'Country Codes',
			'deployment-mpsk.html': 'MPSK Local',
			'deployment-cda-mpsk.html': 'Cloud Auth MPSK',
			'deployment-bulk-ap.html': 'Bulk AP',
			'deployment-pan.html': 'PAN',
			'troubleshooting-clients.html': 'Client Troubleshooting',
			'troubleshooting-ap.html': 'AP Troubleshooting',
			'troubleshooting-switching.html': 'Switch Troubleshooting',
			'experimental-switching.html': 'Exp Switching',
			'event-dashboard.html': 'Event Dashboard',
			'comcast.html': 'Comcast',
		}

		$(document).ready(function() {
			var reachabilityPromise = new $.Deferred();
		    checkReachability(reachabilityPromise);

			var d = new Date();
			var text = d.toString();
			var reloadBtn = '<button class="btn btn-round btn-sm btn-outline btn-warning reload-link" onclick="window.location.reload(true);" >Update Statistics</button>';
			document.getElementById("dataDate").innerHTML = "Statistics Updated at <strong>"+text+"</strong>"+reloadBtn;

			
			updateYearlyTable();
			updateUserGraph();
			updateDailyGraph();
			updateVisitorGraph();
			updateHistoryGraph();
			//updateCountryGraph();
			updateCountryTable();
			var pageselector = document.getElementById("pageselector");
			pageselector.value = "dashboards";
			var monthselector = document.getElementById("monthselector");
			monthselector.value = "week";
			pageselector.dispatchEvent(new Event('change'));

		});
		
		function updateYearlyTable() {
			var totalUniqueUsers = JSON.parse(<?php echo json_encode($totalUniqueUsers) ?>);
			var counter = 0;
			$.each(totalUniqueUsers, function() {
				counter++;
				if (counter < 11) {
					var tbodyRef = document.getElementById('yearly-table').getElementsByTagName('tbody')[0];
		
					// Insert a row at the end of table
					var newRow = tbodyRef.insertRow();
		
					var newYear = newRow.insertCell();
					var newYearText = document.createTextNode(this["year"]);
					newYear.className = "text-left";
					newYear.appendChild(newYearText);
		
					var newCount = newRow.insertCell();
					var newCountText = document.createTextNode(this["count"]);
					newCount.className = "text-left";
					newCount.appendChild(newCountText);
				}
			});
		}

		function updateUserGraph() {

			var userselector = document.getElementById("userselector");
			var usermode = userselector.value;
			
			var yearselector = document.getElementById("yearselector");
			var yearmode = yearselector.value;

			if (usermode === "month") {
				// Generate the Unique users Graph
				var series = <?php echo json_encode($ntotU) ?>;
				if (yearmode === '2023') series = <?php echo json_encode($totalUsers2023) ?>;
				if (yearmode === '2022') series = <?php echo json_encode($totalUsers2022) ?>;
				
				var dataUsers = {
					labels: monthNames,
					series: [series]
				};

				var optionsUsers = {
					seriesBarDistance: 10,
					axisX: {
						showGrid: false
					},
					axisY: {
						onlyInteger: true,
						offset: 60
					},
					height: "200px",
					plugins: [ Chartist.plugins.tooltip() ]
				};

				var uniqueusers = Chartist.Bar('#uniqueusers-chart', dataUsers, optionsUsers);
				uniqueusers.on('draw', function(data) {
					if(data.type == 'bar') {
						data.element.animate({
							y2: {
								dur: '0.2s',
								from: data.y1,
								to: data.y2
							}
						});
					}
				});
			} else if (usermode === "week") {
				// Generate the Unique users Graph
				var series = <?php echo json_encode($ntotUW) ?>;
				if (yearmode === '2023') series = <?php echo json_encode($totalUsers2023W) ?>;
				if (yearmode === '2022') series = <?php echo json_encode($totalUsers2022W) ?>;
				
				var labels = Array.from(new Array(52),(val,index)=> index+1+"");
				var dataUsers = {
					labels: labels,
					series: [series]
				};

				var optionsUsers = {
					seriesBarDistance: 10,
					axisX: {
						showGrid: false
					},
					axisY: {
						onlyInteger: true,
						offset: 60
					},
					height: "200px",
					plugins: [ Chartist.plugins.tooltip() ]
				};

				var uniqueusers = Chartist.Bar('#uniqueusers-chart', dataUsers, optionsUsers);
				uniqueusers.on('draw', function(data) {
					if(data.type == 'bar') {
						data.element.animate({
							y2: {
								dur: '0.2s',
								from: data.y1,
								to: data.y2
							}
						});
					}
				});
			}  else if (usermode === "growth-week") {
				// Generate the Unique users Graph
				var series = [];
				var weekSource = <?php echo json_encode($ntotUW) ?>;
				if (yearmode === '2023') weekSource = <?php echo json_encode($totalUsers2023W) ?>;
				if (yearmode === '2022') weekSource = <?php echo json_encode($totalUsers2022W) ?>;
				
				for (let i = 1; i < 53; i++) {

					var totalToWeek = weekSource.slice(0,i);
					//totalToWeek.reduce((a, b) => a + b, 0)
					const sum = totalToWeek.reduce((accumulator, count) => {
					  return accumulator + count;
					}, 0);

					series[i] = sum;
				}

				var labels = Array.from(new Array(52),(val,index)=> index+1+"");
				var dataUsers = {
					labels: labels,
					series: [series]
				};

				var optionsUsers = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 60,
						onlyInteger: true
					},
					/*lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),*/
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				var uniqueusers = Chartist.Line('#uniqueusers-chart', dataUsers, optionsUsers);
				uniqueusers.on('draw', function(data) {
				  if(data.type === 'line' || data.type === 'area') {
					data.element.animate({
					  d: {
						begin: 0,
						dur: 1000,
						from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
						to: data.path.clone().stringify(),
						easing: Chartist.Svg.Easing.easeOutQuint
					  }
					});
				  }
				});

			} else {
				// Generate the Unique users Graph
				var dataUsers = {
					labels: monthNames,
					series: [
						[<?php echo $janTotal ?>, <?php echo $febTotal ?>, <?php echo $marTotal ?>, <?php echo $aprTotal ?>, <?php echo $mayTotal ?>, <?php echo $junTotal ?>, <?php echo $julTotal ?>, <?php echo $augTotal ?>, <?php echo $sepTotal ?>, <?php echo $octTotal ?>, <?php echo $novTotal ?>, <?php echo $decTotal ?>]
					]
				};
				if (yearmode === '2023') {
					dataUsers = {
						labels: monthNames,
						series: [
							[<?php echo $janTotal2023 ?>, <?php echo $febTotal2023 ?>, <?php echo $marTotal2023 ?>, <?php echo $aprTotal2023 ?>, <?php echo $mayTotal2023 ?>, <?php echo $junTotal2023 ?>, <?php echo $julTotal2023 ?>, <?php echo $augTotal2023 ?>, <?php echo $sepTotal2023 ?>, <?php echo $octTotal2023 ?>, <?php echo $novTotal2023 ?>, <?php echo $decTotal2023 ?>]
						]
					};
				} else if (yearmode === '2022') dataUsers = {
					labels: monthNames,
					series: [
						[<?php echo $janTotal2022 ?>, <?php echo $febTotal2022 ?>, <?php echo $marTotal2022 ?>, <?php echo $aprTotal2022 ?>, <?php echo $mayTotal2022 ?>, <?php echo $junTotal2022 ?>, <?php echo $julTotal2022 ?>, <?php echo $augTotal2022 ?>, <?php echo $sepTotal2022 ?>, <?php echo $octTotal2022 ?>, <?php echo $novTotal2022 ?>, <?php echo $decTotal2022 ?>]
					]
				};

				var optionsUsers = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 60,
						onlyInteger: true
					},
					//lineSmooth: Chartist.Interpolation.simple({
					//	divisor: 3
					//}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};
			

				var uniqueusers = Chartist.Line('#uniqueusers-chart', dataUsers, optionsUsers);
				uniqueusers.on('draw', function(data) {
			  	if(data.type === 'line' || data.type === 'area') {
					data.element.animate({
				  	d: {
						begin: 0,
						dur: 1000,
						from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
						to: data.path.clone().stringify(),
						easing: Chartist.Svg.Easing.easeOutQuint
				  	}
					});
			  	}
				});
			}
		}
		


		function updateVisitorGraph() {

			// Build labels for the graph
			var today = new Date();
			var daysInMonth = new Date(today.getYear(), today.getMonth(), 0).getDate();
			var labels = Array.from(new Array(daysInMonth),(val,index)=> index+"");

			var visitorselector = document.getElementById("visitorselector");
			var visitormode = visitorselector.value;

			if (visitormode === "month") {
				// Generate the Unique users Graph
				var series = <?php echo json_encode($ntotV) ?>;
				var dataVisitors = {
					labels: monthNames,
					series: [series]
				};

			} else if (visitormode === "week") {
				// Generate the Unique users Graph
				var series = <?php echo json_encode($ntotVW) ?>;
				var labels = Array.from(new Array(52),(val,index)=> index+1+"");
				var dataVisitors = {
					labels: labels,
					series: [series]
				};

			} else if (visitormode === "7days") {
				var visitorStats = JSON.parse(<?php echo json_encode($visitorDataW) ?>);

				labels = [];
				for (let i = 0; i < 7; i++) {
					var day = new Date(Date.now() - (i * 24 * 60 * 60 * 1000));
					if (i==6) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else if (day.getDate() == 1) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else labels.unshift(day.getDate());
				}

				var series = Array(7).fill(0);
				$.each(visitorStats, function() {
					var day = new Date(this["day"]);
					var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
					if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
					series[labelIndex] = parseInt(this["dailycount"]);
				});

				var dataVisitors = {
					labels: labels,
					series: [series]
				};

			} else if (visitormode === "28days") {
				var visitorStats = JSON.parse(<?php echo json_encode($visitorData28) ?>);

				labels = [];
				for (let i = 0; i < 28; i++) {
					var day = new Date(Date.now() - (i * 24 * 60 * 60 * 1000));
					if (i==29) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else if (day.getDate() == 1) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else labels.unshift(day.getDate());
				}

				var series = Array(28).fill(0);
				$.each(visitorStats, function() {
					var day = new Date(this["day"]);
					var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
					if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
					series[labelIndex] = parseInt(this["dailycount"]);
				});

				var dataVisitors = {
					labels: labels,
					series: [series]
				};
			}


			var optionsVisitors = {
				seriesBarDistance: 10,
				axisX: {
					showGrid: false
				},
				axisY: {
					onlyInteger: true,
					offset: 60
				},
				height: "200px",
				plugins: [ Chartist.plugins.tooltip() ]
			};

			var uniquevisitors = Chartist.Bar('#uniquevisitors-chart', dataVisitors, optionsVisitors);
			uniquevisitors.on('draw', function(data) {
				if(data.type == 'bar') {
					data.element.animate({
						y2: {
							dur: '0.2s',
							from: data.y1,
							to: data.y2
						}
					});
				}
			});
		}

		function updateDailyGraph() {

			// Build labels for the graph
			var today = new Date();
			var daysInMonth = new Date(today.getYear(), today.getMonth(), 0).getDate();
			var labels = Array.from(new Array(daysInMonth),(val,index)=> index+"");

			var dailyStats = JSON.parse(<?php echo json_encode($dailyData28) ?>);
			labels = [];
			for (let i = 0; i < 28; i++) {
				var day = new Date(Date.now() - (i * 24 * 60 * 60 * 1000));
				if (i==29) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
				else if (day.getDate() == 1) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
				else labels.unshift(day.getDate());
			}

			var series = Array(28).fill(0);
			$.each(dailyStats, function() {
				var day = new Date(this["hitdate"]);
				var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
				if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
				series[labelIndex] = parseInt(this["dailycount"]);
			});

			var dataVisitors = {
				labels: labels,
				series: [series]
			};


			var optionsVisitors = {
				seriesBarDistance: 10,
				axisX: {
					showGrid: false
				},
				axisY: {
					onlyInteger: true,
					offset: 60
				},
				height: "200px",
				plugins: [ Chartist.plugins.tooltip() ]
			};

			var uniquevisitors = Chartist.Bar('#daily-chart', dataVisitors, optionsVisitors);
			uniquevisitors.on('draw', function(data) {
				if(data.type == 'bar') {
					data.element.animate({
						y2: {
							dur: '0.2s',
							from: data.y1,
							to: data.y2
						}
					});
				}
			});
		}

		function updateHistoryGraph() {
			var labels = [];
			var series = [];

			var historyStats = JSON.parse(<?php echo json_encode($hitHistory) ?>);
			var counter = 0;
			$.each(historyStats, function() {
				counter++;
				if (counter < 6) {
					var tbodyRef = document.getElementById('history-table').getElementsByTagName('tbody')[0];
				
					// Insert a row at the end of table
					var newRow = tbodyRef.insertRow();
				
					var pageName = newRow.insertCell();
					var pageNameText = document.createTextNode(cleanPageNames[this["pageid"]]);
					pageName.className = "text-left";
					pageName.appendChild(pageNameText);
				
					var newCount = newRow.insertCell();
					var newCountText = document.createTextNode(this["historycount"]);
					newCount.className = "text-left";
					newCount.appendChild(newCountText);
				}
				
				labels.push(cleanPageNames[this["pageid"]]);
				series.push({ meta: cleanPageNames[this["pageid"]], value: parseInt(this["historycount"]) });
				//series.push(parseInt(this["historycount"]));
			});

			var dataHistory = {
				labels: labels,
				series: series
			};


			var optionsHistory = {
				distributeSeries: true,
				seriesBarDistance: 10,
				axisX: {
					showGrid: false
				},
				axisY: {
					onlyInteger: true,
					offset: 60
				},
				height: "200px",
				plugins: [ Chartist.plugins.tooltip() ]
			};

			var historyCounts = Chartist.Bar('#history-chart', dataHistory, optionsHistory);
			historyCounts.on('draw', function(data) {
				if(data.type == 'bar') {
					data.element.animate({
						y2: {
							dur: '0.2s',
							from: data.y1,
							to: data.y2
						}
					});
				}
			});
		}

		function updateCountryTable() {
			var countryStats = JSON.parse(<?php echo json_encode($countryHistory) ?>);
			//countryStats = countryStats.slice(0, 10);
			var mapData = {};
			var counter = 0;
			$.each(countryStats, function() {
				counter++;
				mapData[this["code"]] = this["hitcount"];
				if (counter < 11) {
					var tbodyRef = document.getElementById('countryTable').getElementsByTagName('tbody')[0];

					// Insert a row at the end of table
					var newRow = tbodyRef.insertRow();

					// Insert a cell at the end of the row
					var newCell = newRow.insertCell();

					// Append a text node to the cell
					var divEle = document.createElement('div');
					divEle.className = "flag";
					var img = document.createElement('img');
					img.src = "assets/img/flags/"+this["code"].toLowerCase()+".svg";
					img.setAttribute("height", 17);
					img.setAttribute("width", 23);
					divEle.appendChild(img);
					newCell.appendChild(divEle);

					var newCountry = newRow.insertCell();
					var newCountryText = document.createTextNode(this["country"]);
					newCountry.className = "text-left";
					newCountry.appendChild(newCountryText);

					var newCount = newRow.insertCell();
					var newCountText = document.createTextNode(this["hitcount"]);
					newCount.className = "text-left";
					newCount.appendChild(newCountText);
				}
			});

			$('#worldMap').vectorMap({
					map: 'world_mill_en',
					backgroundColor: "transparent",
					zoomOnScroll: false,
					regionStyle: {
						initial: {
							fill: '#e4e4e4',
							"fill-opacity": 0.9,
							stroke: 'none',
							"stroke-width": 0,
							"stroke-opacity": 0
						}
					},

					series: {
						regions: [{
							values: mapData,
							scale: ["#ffd4a6", "#ff8300"],
							normalizeFunction: 'polynomial'
						}]
					},
				});
		}

		function updateCountryGraph() {
			var labels = [];
			var series = [];

			var countryStats = JSON.parse(<?php echo json_encode($countryHistory) ?>);

			document.getElementById("countryCounter").innerHTML = "Total countries since January 2023: <strong>"+countryStats.length+"</strong>";

			$.each(countryStats, function() {
				labels.push(this["country"]);
				series.push({ meta: this["country"], value: parseInt(this["hitcount"]) });
			});

			var dataHistory = {
				labels: labels,
				series: series
			};


			var optionsHistory = {
				distributeSeries: true,
				seriesBarDistance: 10,
				axisX: {
					showGrid: false
				},
				axisY: {
					onlyInteger: true,
					offset: 40
				},
				height: "200px",
				plugins: [ Chartist.plugins.tooltip() ]
			};

			var countryCounts = Chartist.Bar('#country-chart', dataHistory, optionsHistory);
			countryCounts.on('draw', function(data) {
				if(data.type == 'bar') {
					data.element.animate({
						y2: {
							dur: '0.2s',
							from: data.y1,
							to: data.y2
						}
					});
				}
			});
		}



		function updatePageViewGraph() {

			// Remove the Legend (will be rebuilt later in code)
			$('#viewsLegend').empty();
			//<i class="fa-solid fa-circle text-info"></i> Open <i class="fa-solid fa-circle text-danger"></i> Click <i class="fa-solid fa-circle text-warning"></i> Click Second Time

			// Build labels for the graph
			var today = new Date();
			var daysInMonth = new Date(today.getYear(), today.getMonth(), 0).getDate();
			var labels = Array.from(new Array(daysInMonth),(val,index)=> index+"");

			// Grab the data for the page selected
			var pageselector = document.getElementById("pageselector");
			var pageSelected = pageselector.value;

			var monthselector = document.getElementById("monthselector");
			var monthSelected = monthselector.value;

			// Build Labels for week view

			if (monthSelected === "week") {
				labels = [];
				for (let i = 0; i < 7; i++) {
					var day = new Date(Date.now() - (i * 24 * 60 * 60 * 1000));
					if (i==6) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else if (day.getDate() == 1) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else labels.unshift(day.getDate());
				}
			} else if (monthSelected === "28days") {
				labels = [];
				for (let i = 0; i < 28; i++) {
					var day = new Date(Date.now() - (i * 24 * 60 * 60 * 1000));
					if (i==29) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else if (day.getDate() == 1) labels.unshift(day.getDate()+" "+monthNames[day.getMonth()]);
					else labels.unshift(day.getDate());
				}
			}

			var pageStats = [];

			// load data from php variable
			if (pageSelected === "hydra-dashboard.html") {
				if (monthSelected === "current") pageStats = <?php echo $hydraData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $hydraDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $hydraData28 ?>;
				else pageStats = <?php echo $dashboardDataP ?>;
			} else if (pageSelected === "dashboard.html") {
				if (monthSelected === "current") pageStats = <?php echo $dashboardData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $dashboardDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $dashboardData28 ?>;
				else pageStats = <?php echo $dashboardDataP ?>;
			} else if (pageSelected === "settings.html") {
				if (monthSelected === "current") pageStats = <?php echo $settingsData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $settingsDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $settingsData28 ?>;
				else pageStats = <?php echo $settingsDataP ?>;
			} else if (pageSelected === "documentation.html") {
				if (monthSelected === "current") pageStats = <?php echo $documentationData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $documentationDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $documentationData28 ?>;
				else pageStats = <?php echo $documentationDataP ?>;
			} else if (pageSelected === "workflow-csv.html") {
				if (monthSelected === "current") pageStats = <?php echo $csvData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $csvDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $documentationData28 ?>;
				else pageStats = <?php echo $csvDataP ?>;
			} else if (pageSelected === "workflow-site.html") {
				if (monthSelected === "current") pageStats = <?php echo $siteData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $siteDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $siteData28 ?>;
				else pageStats = <?php echo $siteDataP ?>;
			} else if (pageSelected === "workflow-msp.html") {
				if (monthSelected === "current") pageStats = <?php echo $mspData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $mspDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $mspData28 ?>;
				else pageStats = <?php echo $mspDataP ?>;
			} else if (pageSelected === "deployment-group.html") {
				if (monthSelected === "current") pageStats = <?php echo $groupData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $groupDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $groupData28 ?>;
				else pageStats = <?php echo $groupDataP ?>;
			} else if (pageSelected === "deployment-wlan.html") {
				if (monthSelected === "current") pageStats = <?php echo $wlanData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $wlanDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $wlanData28 ?>;
				else pageStats = <?php echo $wlanDataP ?>;
			} else if (pageSelected === "deployment-user-roles.html") {
				if (monthSelected === "current") pageStats = <?php echo $rolesData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $rolesDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $rolesData28 ?>;
				else pageStats = <?php echo $rolesDataP ?>;
			}  else if (pageSelected === "deployment-mpsk.html") {
				if (monthSelected === "current") pageStats = <?php echo $mpskData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $mpskDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $mpskData28 ?>;
				else pageStats = <?php echo $mpskDataP ?>;
			}  else if (pageSelected === "deployment-cda-mpsk.html") {
				if (monthSelected === "current") pageStats = <?php echo $cdampskData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $cdampskDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $cdampskData28 ?>;
				else pageStats = <?php echo $cdampskDataP ?>;
			} else if (pageSelected === "deployment-auth-servers.html") {
				if (monthSelected === "current") pageStats = <?php echo $authData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $authDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $authData28 ?>;
				else pageStats = <?php echo $authDataP ?>;
			} else if (pageSelected === "deployment-switching.html") {
				if (monthSelected === "current") pageStats = <?php echo $switchData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $switchDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $switchData28 ?>;
				else pageStats = <?php echo $switchDataP ?>;
			} else if (pageSelected === "deployment-gateway.html") {
				if (monthSelected === "current") pageStats = <?php echo $gatewayData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $gatewayDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $gatewayData28 ?>;
				else pageStats = <?php echo $gatewayDataP ?>;
			} else if (pageSelected === "deployment-country.html") {
				if (monthSelected === "current") pageStats = <?php echo $countryData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $countryDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $countryData28 ?>;
				else pageStats = <?php echo $countryDataP ?>;
			} else if (pageSelected === "deployment-airmatch.html") {
				if (monthSelected === "current") pageStats = <?php echo $airmatchData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $airmatchDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $airmatchData28 ?>;
				else pageStats = <?php echo $airmatchDataP ?>;
			} else if (pageSelected === "deployment-clientmatch.html") {
				if (monthSelected === "current") pageStats = <?php echo $clientmatchData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $clientmatchDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $clientmatchData28 ?>;
				else pageStats = <?php echo $clientmatchDataP ?>;
			} else if (pageSelected === "monitoring-kms.html") {
				if (monthSelected === "current") pageStats = <?php echo $kmsData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $kmsDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $kmsData28 ?>;
				else pageStats = <?php echo $kmsDataP ?>;
			} else if (pageSelected === "deployment-inventory.html") {
				if (monthSelected === "current") pageStats = <?php echo $inventoryData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $inventoryDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $inventoryData28 ?>;
				else pageStats = <?php echo $inventoryDataP ?>;
			} else if (pageSelected === "monitoring-licensing.html") {
				if (monthSelected === "current") pageStats = <?php echo $licenseData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $licenseDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $licenseData28 ?>;
				else pageStats = <?php echo $licenseDataP ?>;
			} else if (pageSelected === "monitoring-clients.html") {
				if (monthSelected === "current") pageStats = <?php echo $clientsData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $clientsDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $clientsData28 ?>;
				else pageStats = <?php echo $clientsDataP ?>;
			} else if (pageSelected === "monitoring-aps.html") {
				if (monthSelected === "current") pageStats = <?php echo $apData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $apDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $apData28 ?>;
				else pageStats = <?php echo $apDataP ?>;
			} else if (pageSelected === "monitoring-reboot.html") {
				if (monthSelected === "current") pageStats = <?php echo $rebootData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $rebootDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $rebootData28 ?>;
				else pageStats = <?php echo $rebootDataP ?>;
			} else if (pageSelected === "monitoring-ipam.html") {
				if (monthSelected === "current") pageStats = <?php echo $ipamData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $ipamDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $ipamData28 ?>;
				else pageStats = <?php echo $ipamDataP ?>;
			} else if (pageSelected === "monitoring-rapids.html") {
				if (monthSelected === "current") pageStats = <?php echo $rapidsData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $rapidsDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $rapidsData28 ?>;
				else pageStats = <?php echo $rapidsDataP ?>;
			} else if (pageSelected === "monitoring-mesh.html") {
				if (monthSelected === "current") pageStats = <?php echo $meshData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $meshDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $meshData28 ?>;
				else pageStats = <?php echo $meshDataP ?>;
			} else if (pageSelected === "monitoring-vrf.html") {
				if (monthSelected === "current") pageStats = <?php echo $vrfData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $vrfDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $vrfData28 ?>;
				else pageStats = <?php echo $vrfDataP ?>;
			} else if (pageSelected === "experimental-switching.html") {
				if (monthSelected === "current") pageStats = <?php echo $exSwitchData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $exSwitchDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $exSwitchData28 ?>;
				else pageStats = <?php echo $exSwitchDataP ?>;
			} else if (pageSelected === "troubleshooting-clients.html") {
				if (monthSelected === "current") pageStats = <?php echo $troubleshootingClientsData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $troubleshootingClientsDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $troubleshootingClientsData28 ?>;
				else pageStats = <?php echo $troubleshootingClientsDataP ?>;
			} else if (pageSelected === "troubleshooting-ap.html") {
				if (monthSelected === "current") pageStats = <?php echo $troubleshootingAPData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $troubleshootingAPDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $troubleshootingAPData28 ?>;
				else pageStats = <?php echo $troubleshootingAPDataP ?>;
			} else if (pageSelected === "troubleshooting-switching.html") {
				if (monthSelected === "current") pageStats = <?php echo $troubleshootingSwitchingData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $troubleshootingSwitchingDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $troubleshootingSwitchingData28 ?>;
				else pageStats = <?php echo $troubleshootingSwitchingDataP ?>;
			} else if (pageSelected === "deployment-bulk-ap.html") {
				if (monthSelected === "current") pageStats = <?php echo $bulkAPData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $bulkAPDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $bulkAPData28 ?>;
				else pageStats = <?php echo $bulkAPDataP ?>;
			} else if (pageSelected === "deployment-pan.html") {
				if (monthSelected === "current") pageStats = <?php echo $panData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $panDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $panData28 ?>;
				else pageStats = <?php echo $panDataP ?>;
			} else if (pageSelected === "monitoring-resources.html") {
				if (monthSelected === "current") pageStats = <?php echo $resourceData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $resourceDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $resourceData28 ?>;
				else pageStats = <?php echo $resourceDataP ?>;
			} else if (pageSelected === "deployment-group-mgmt.html") {
				if (monthSelected === "current") pageStats = <?php echo $groupMgmtData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $groupMgmtDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $groupMgmtData28 ?>;
				else pageStats = <?php echo $groupMgmtDataP ?>;
			} else if (pageSelected === "deployment-site-mgmt.html") {
				if (monthSelected === "current") pageStats = <?php echo $siteMgmtData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $siteMgmtDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $siteMgmtData28 ?>;
				else pageStats = <?php echo $siteMgmtDataP ?>;
			} else if (pageSelected === "deployment-visitor.html") {
				if (monthSelected === "current") pageStats = <?php echo $visitorMgmtData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $visitorMgmtDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $visitorMgmtData28 ?>;
				else pageStats = <?php echo $visitorMgmtDataP ?>;
			} else if (pageSelected === "event-dashboard.html") {
				if (monthSelected === "current") pageStats = <?php echo $eventDashData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $eventDashDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $eventDashData28 ?>;
				else pageStats = <?php echo $eventDashDataP ?>;
			} else if (pageSelected === "comcast.html") {
				if (monthSelected === "current") pageStats = <?php echo $comcastData ?>;
				else if (monthSelected === "week") pageStats = <?php echo $comcastDataW ?>;
				else if (monthSelected === "28days") pageStats = <?php echo $comcastData28 ?>;
				else pageStats = <?php echo $comcastDataP ?>;
			}

			// Build out the graph data
			var series = Array(daysInMonth).fill(0);
			$.each(pageStats, function() {
				var day = new Date(this["hitdate"]);
				series[day.getDate()] = parseInt(this["hitcount"]);
			});

			if (monthSelected === "week") {
				var series = Array(7).fill(0);
				$.each(pageStats, function() {
					var day = new Date(this["hitdate"]);
					var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
					if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
					series[labelIndex] = parseInt(this["hitcount"]);
				});
			} else if (monthSelected === "28days") {
				var series = Array(28).fill(0);
				$.each(pageStats, function() {
					var day = new Date(this["hitdate"]);
					var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
					if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
					series[labelIndex] = parseInt(this["hitcount"]);
				});
			}

			var optionsPage = {
				lineSmooth: false,
				showPoint: true,
				showArea: false,
				height: "260px",
				axisY: {
					offset: 40,
					onlyInteger: true
				},
				lineSmooth: Chartist.Interpolation.simple({
					divisor: 3
				}),
				low: 0,
				plugins: [ Chartist.plugins.tooltip() ]
			};

			var dataPage = {
				labels: labels,
				series: [series]
			};

			// If a combined graph is selected
			if (pageSelected === "dashboards") {
				if (monthSelected === "current") {
					pageStats = <?php echo $hydraData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $dashboardData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $eventDashData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $hydraDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $dashboardDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $eventDashDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $hydraData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $dashboardData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $eventDashData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $hydraDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $dashboardDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $eventDashDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> Hydra\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> Dashboard\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> Event Dashboard');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			} else if (pageSelected === "support") {
				if (monthSelected === "current") {
					pageStats = <?php echo $settingsData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $documentationData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $settingsDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $documentationDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $settingsData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $documentationData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $settingsDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $documentationDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> Settings\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> Documentation ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			} else if (pageSelected === "workflow") {
				if (monthSelected === "current") {
					pageStats = <?php echo $csvData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mspData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $csvDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mspDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $csvData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mspData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $csvDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mspDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> CSV Workflows\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> Site Workflows ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> MSP Workflows ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			} else if (pageSelected === "deployment") {
				if (monthSelected === "current") {
					pageStats = <?php echo $groupData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $wlanData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rolesData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mpskData ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $authData ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $switchData ?>;
					var series6 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series6[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $gatewayData ?>;
					var series7 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series7[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $countryData ?>;
					var series8 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series8[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $groupDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $wlanDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rolesDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mpskDataW ?>;
					var series4 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $authDataW ?>;
					var series5 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $switchDataW ?>;
					var series6 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series6[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $gatewayDataW ?>;
					var series7 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series7[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $countryDataW ?>;
					var series8 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series8[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $groupData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $wlanData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rolesData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mpskData28 ?>;
					var series4 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $authData28 ?>;
					var series5 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $switchData28 ?>;
					var series6 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series6[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $gatewayData28 ?>;
					var series7 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series7[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $countryData28 ?>;
					var series8 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series8[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $groupDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $wlanDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rolesDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $mpskDataP ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $authDataP ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $switchDataP ?>;
					var series6 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series6[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $gatewayDataP ?>;
					var series7 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series7[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $countryDataP ?>;
					var series8 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series8[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3,series4,series5,series6,series7,series8];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> Group\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> WLAN ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> User Roles ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-purple"></i> MPSK-Local ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-success"></i> Authentication Servers ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-primary"></i> Switching ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-series7"></i> Gateways ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-series8"></i> Country Codes ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			} else if (pageSelected === "services") {
				if (monthSelected === "current") {
					pageStats = <?php echo $airmatchData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $clientmatchData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $kmsData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $cdampskData ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $inventoryData ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $licenseData ?>;
					var series6 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series6[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $airmatchDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $clientmatchDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $kmsDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $cdampskDataW ?>;
					var series4 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $inventoryDataW ?>;
					var series5 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $licenseDataW ?>;
					var series6 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series6[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $airmatchData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $clientmatchData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $kmsData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $cdampskData28 ?>;
					var series4 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $inventoryData28 ?>;
					var series5 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $licenseData28 ?>;
					var series6 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series6[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $airmatchDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $clientmatchDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $kmsDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $cdampskDataP ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $inventoryDataP ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $licenseDataP ?>;
					var series6 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series6[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3,series4,series5,series6];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> AirMatch ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> ClientMatch ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> KMS ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-purple"></i> Cloud Auth MPSK ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-success"></i> Device Inventory ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-primary"></i> License Monitoring ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			} else if (pageSelected === "monitoring") {
				if (monthSelected === "current") {
					pageStats = <?php echo $clientsData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $apData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rebootData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $ipamData ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rapidsData ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $meshData ?>;
					var series6 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series6[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $vrfData ?>;
					var series7 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series7[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $clientsDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $apDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rebootDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $ipamDataW ?>;
					var series4 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rapidsDataW ?>;
					var series5 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $meshDataW ?>;
					var series6 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series6[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $vrfDataW ?>;
					var series7 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series7[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $clientsData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $apData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rebootData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $ipamData28 ?>;
					var series4 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rapidsData28 ?>;
					var series5 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $meshData28 ?>;
					var series6 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series6[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $vrfData28 ?>;
					var series7 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series7[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $clientsDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $apDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $rebootDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $ipamDataP ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $rapidsDataP ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $meshDataP ?>;
					var series6 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series6[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $vrfDataP ?>;
					var series7 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series7[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3,series4,series5,series6,series7];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> Client Statistics\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> AP Statistics\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> AP Reboot ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-purple"></i> IPAM Monitoring ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-success"></i> RAPIDS ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-primary"></i> Mesh ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-series7"></i> VisualRF ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			}  else if (pageSelected === "experimental") {
				if (monthSelected === "current") {
					pageStats = <?php echo $exSwitchData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $troubleshootingClientsData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingAPData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingSwitchingData ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $bulkAPData ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $exSwitchDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $troubleshootingClientsDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingAPDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingSwitchingDataW ?>;
					var series4 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $bulkAPDataW ?>;
					var series5 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $exSwitchData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $troubleshootingClientsData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingAPData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingSwitchingData28 ?>;
					var series4 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series4[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $bulkAPData28 ?>;
					var series5 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series5[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $exSwitchDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $troubleshootingClientsDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingAPDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $troubleshootingSwitchingDataP ?>;
					var series4 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series4[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $bulkAPDataP ?>;
					var series5 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series5[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3,series4,series5];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> Switching\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> Client Troubleshooting\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> AP Troubleshooting ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-purple"></i> Switching Troubleshooting ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-success"></i> Bulk AP Config ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			}  else if (pageSelected === "private") {
				if (monthSelected === "current") {
					pageStats = <?php echo $panData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $resourceData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $comcastData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
					
				} else if (monthSelected === "week") {
					pageStats = <?php echo $panDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $resourceDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $comcastDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $panData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $resourceData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $comcastData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $panDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $resourceDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});
					
					pageStats = <?php echo $comcastDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> MPSK-Local PAN');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> Resource Reboot');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> Comcast');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			} else if (pageSelected === "management") {
				if (monthSelected === "current") {
					pageStats = <?php echo $groupMgmtData ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteMgmtData ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $visitorMgmtData ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "week") {
					pageStats = <?php echo $groupMgmtDataW ?>;
					var series1 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteMgmtDataW ?>;
					var series2 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $visitorMgmtDataW ?>;
					var series3 = Array(7).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else if (monthSelected === "28days") {
					pageStats = <?php echo $groupMgmtData28 ?>;
					var series1 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series1[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteMgmtData28 ?>;
					var series2 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series2[labelIndex] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $visitorMgmtData28 ?>;
					var series3 = Array(28).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						var labelIndex = labels.indexOf(day.getDate()+" "+monthNames[day.getMonth()]);
						if (labelIndex === -1) labelIndex = labels.indexOf(day.getDate());
						series3[labelIndex] = parseInt(this["hitcount"]);
					});
				} else {
					pageStats = <?php echo $groupMgmtDataP ?>;
					var series1 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series1[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $siteMgmtDataP ?>;
					var series2 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series2[day.getDate()] = parseInt(this["hitcount"]);
					});

					pageStats = <?php echo $visitorMgmtDataP ?>;
					var series3 = Array(daysInMonth).fill(0);
					$.each(pageStats, function() {
						var day = new Date(this["hitdate"]);
						series3[day.getDate()] = parseInt(this["hitcount"]);
					});
				}

				// Build out the data for the chartist graphs
				series = [series1,series2,series3];
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-info"></i> Group Management\t');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-danger"></i> Site Management ');
				$('#viewsLegend').append('<i class="fa-solid fa-circle text-warning"></i> Visitor Management ');

				// need different options for the multiple line graphs
				optionsPage = {
					lineSmooth: false,
					showPoint: true,
					showArea: false,
					height: "260px",
					axisY: {
						offset: 40,
						onlyInteger: true
					},
					lineSmooth: Chartist.Interpolation.simple({
						divisor: 3
					}),
					low: 0,
					plugins: [ Chartist.plugins.tooltip() ]
				};

				dataPage = {
					labels: labels,
					series: series
				};
			}

			var pagehitschart = Chartist.Line('#pagehits-chart', dataPage, optionsPage);

			pagehitschart.on('draw', function(data) {
			  if(data.type === 'line' || data.type === 'area') {
				data.element.animate({
				  d: {
					begin: 0,
					dur: 1000,
					from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
					to: data.path.clone().stringify(),
					easing: Chartist.Svg.Easing.easeOutQuint
				  }
				});
			  }
			});
		}
	</script>
	<!--   Main JS Files -->
	<script src="assets/js/main.js?v=240415"></script>
	<script src="assets/js/proxy.js?v=230325"></script>
	<script src="assets/js/hydra.js?v=230524"></script>
</html>
